module Tog.RawPrint where

import Tog.Parse
import Tog.ScopeCheck
import Text.PrettyPrint.Leijen

-- Tog syntax has two ASTs, with ScopeCheck.hs mapping one of them to the other. 
-- 1. Tog.Raw.Abs: The AST resulting from parsing the input file. The file is generated by BNFC, after parsing Raw.cf
-- 2. Tog.Abstract: The AST produced by the scope checker, which is then passed to the type checker.
import Tog.Abstract as Abstract 
import Tog.Raw.Abs  as Abs 

-- The output of the parse 
rawPrintAfterParsing :: FilePath -> IO (Either Doc Abs.Module)
rawPrintAfterParsing file = 
  do s <- readFile file
     return $ parseModule s

-- The output of the scope checker
-- To print the AST, the show instances in Tog.Abstract module need to be commented out
rawPrintAfterScopeChecking :: FilePath -> IO (Either Doc Abstract.Module)
rawPrintAfterScopeChecking file =
  do p <- rawPrintAfterParsing file
     case p of
        Left  err -> return $ Left err 
        Right raw -> return $ scopeCheckModule raw 














